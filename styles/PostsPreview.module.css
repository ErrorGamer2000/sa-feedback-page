.controlscontainer {
  display: flex;
  flex-direction: column;
}

.controls {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
}

.controls > * {
  width: 100%;
  user-select: none;
}

.sortcontrols {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  flex-grow: 0;
  flex-shrink: 1;
}

.searchcontrols {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  flex-grow: 1;
  flex-shrink: 1;
  align-items: center;
  flex-wrap: wrap;
}

.searchlabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 0;
  flex-grow: 1;
}

.searchlabel > p {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  flex-grow: 0;
  flex-shrink: 1;
  min-width: 0;
}

.search {
  background-color: hsl(var(--background-hs), 100%);
  border: 2px solid hsl(var(--background-hs), 80%);
  padding: 0.25rem;
  color: black;
  border-radius: 0.5rem;
  font-family: inherit;
  font-size: inherit;
  flex-grow: 1;
  flex-shrink: 1;
  min-width: 0;
  transition: border-color 0.1s ease;
}

.search[aria-invalid="true"] {
  border-color: hsl(0, 100%, 75%);
}

.regex {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
}

.regex > * {
  min-width: 0;
}

.regex > p {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  flex-grow: 0;
  flex-shrink: 1;
  min-width: 0;
}

.regex > input {
  appearance: none;
  background-color: hsl(var(--background-hs), 98%);
  height: calc(0.9rem + 2px);
  width: calc(0.9rem + 2px);
  border-radius: 0.25rem;
  position: relative;
  flex-shrink: 0;
}

.regex > input::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 0.9rem;
  width: 0.9rem;
  border-radius: 0.25rem;
  border: 2px solid hsl(var(--background-hs), 90%);
}

.regex > input:checked::before {
  background-color: rgb(var(--accent-rgb));
  border-color: rgb(var(--accent-rgb));
}

.regex > input:checked::after {
  content: "";
  height: 0.5rem;
  width: 0.2rem;
  border-bottom: 2px solid white;
  border-right: 2px solid white;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) translateY(-2px) rotate(45deg);
}

.dropdown {
  display: flex;
  gap: 0.5rem;
  flex-direction: row;
  align-items: center;
  user-select: none;
  flex-shrink: 0;
  flex-grow: 1;
}

.dropdown > p {
  flex-shrink: 0;
}

.dropdown > div > select {
  appearance: none;
  background-color: transparent;
  border: none;
  padding: 0;
  margin: 0;
  padding-right: 1.5rem;
  min-width: fit-content;
  width: calc(100% - 1.5rem);
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  outline: none;
  color: inherit;
  flex-grow: 1;
  cursor: pointer;
}

.dropdown > div {
  color: black;
  background-color: white;
  border-radius: 0.5rem;
  border: 2px solid hsl(var(--background-hs), 80%);
  padding: 0.5rem;
  padding-block: 0.25rem;
  margin: 0;
  width: 100%;
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  color: black;
  display: grid;
  align-items: center;
}

.dropdown > div:has(select:focus) {
  outline: 2px solid #539bf5 !important;
}

.dropdown > div:has(select:focus) > select {
  outline: none !important;
}

.dropdown > div:not([multiple])::after {
  content: "";
  width: 0.8em;
  height: 0.5em;
  background-color: hsl(var(--background-hs), 80%);
  clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  justify-self: end;
}

.dropdown > div > select,
.dropdown > div::after {
  grid-column: 1 / span 1;
  grid-row: 1 / span 1;
}

.dropdown > div > select::-ms-expand {
  display: none;
}

.dropdown > p {
  display: none;
}

@media only screen and (min-width: 900px) {
  .controls {
    flex-direction: row;
  }

  .controls > * {
    width: unset;
  }

  .pagecontrols {
    width: unset;
  }

  .dropdown {
    flex-grow: 0;
  }

  .dropdown > div > select {
    min-width: 9rem;
  }

  .dropdown > p {
    display: block;
  }
}

.postspreview {
  background-color: hsl(var(--background-hs), 100%);
  border-radius: 0.5rem;
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  text-align: center;
  flex-grow: 1;
}

.postpreview {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  padding: 0.5rem;
  text-align: initial;
  align-items: center;
  user-select: none;
  border-radius: 0;
}
.postpreview:not(:last-child) {
  border-bottom: solid 1px rgba(0, 0, 0, 0.1);
}

.postinfo {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  gap: 0.5rem;
}

.posttags {
  display: flex;
  flex-direction: row;
  font-size: 0.6rem;
  gap: 0.5rem;
}
.posttags > p {
  padding: 0.25rem;
  padding-block: 0.1rem;
  border-radius: 0.25rem;
  font-weight: 600;
}

.postvotes {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.answer {
  color: #22c55e;
  font-size: 1.5rem;
  line-height: 0;
  margin-top: 0.5rem;
}
