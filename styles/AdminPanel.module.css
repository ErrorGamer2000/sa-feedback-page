.panelcontainer {
  background-color: hsl(var(--background-hs), 100%);
  border-radius: 0.5rem;
  padding: 0.5rem;
  min-width: 0;
  flex-grow: 1;
  display: flex;
  flex-direction: column-reverse;
}

.panelsidebar {
  flex-grow: 0;
  flex-shrink: 0;
  display: flex;
  min-width: 0;
  flex-direction: row;
  flex-wrap: wrap;
  border-right: 1px solid hsl(var(--background-hs), 90%);
  padding: 0.5rem;
  gap: 0.5rem;
}

.paneltab {
  user-select: none;
  cursor: pointer;
  padding: 0.5rem;
  padding-right: 1.5rem;
  border-left: 2px solid hsl(var(--background-hs), 90%);
  border-radius: 0;
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.paneltab[data-selected="true"] {
  border-left-color: rgba(var(--accent-rgb), 0.75);
  background-color: hsl(var(--background-hs), 97%);
  color: rgb(var(--accent-rgb));
}

.paneltab > p {
  transition: transform 0.25s ease-out;
}

.paneltab[data-selected="true"] > p {
  transform: translateX(0.5rem);
}

@media only screen and (min-width: 900px) {
  .panelcontainer {
    flex-direction: row;
  }

  .panelsidebar {
    flex-direction: column;
    flex-wrap: nowrap;
  }
}

.panel {
  display: flex;
  flex-grow: 1;
  flex-shrink: 1;
  display: flex;
  flex-direction: column;
  padding: 0.5rem;
  gap: 0.5rem;
}

.listcontainer {
  display: flex;
  flex-direction: column;
  border: 1px solid hsl(var(--background-hs), 90%);
  border-radius: 0.5rem;
  overflow: hidden;
}

.list {
  min-width: 0;
  align-self: stretch;
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
}

.list > thead {
  text-align: left;
}

.list > thead > tr:nth-child(2) > td {
  padding: 0.5rem;
}

.row,
.listheader {
  user-select: none;
}

.listheader > th {
  border-bottom: 1px solid hsl(var(--background-hs), 90%);
}

.row > td,
.listheader > th {
  padding: 1rem;
  padding-block: 0.5rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.row > td:first-child > div {
  display: flex;
}

.row > td:not(:last-child) {
  width: 1%;
  white-space: nowrap;
}

.row > td:last-child > div {
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  height: 100%;
}

.row:nth-child(2n - 1) {
  background-color: hsl(var(--background-hs), 98%);
}

.tag {
  padding: 0.25rem;
  padding-block: 0.1rem;
  border-radius: 0.25rem;
  font-weight: 600;
  font-size: 0.8rem;
  width: min-content;
  white-space: nowrap;
}

.rowcontrols {
  display: flex;
  flex-direction: row;
  gap: 0.5rem;
  width: auto;
}

.rowcontrols > * {
  cursor: pointer;
  color: rgba(0, 0, 0, 0.5);
}

.delete {
  color: red;
}

.nodata {
  margin: 0.5rem;
  align-self: center;
  opacity: 0.5;
  user-select: none;
}

.newtag {
  align-self: stretch !important;
}

.modalbuttons {
  display: grid;
  align-self: stretch;
  place-items: center;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  padding: 0.5rem;
  gap: 0.5rem;
  grid-column: 1 / span 2;
  grid-row: 4 / span 1;
}

.cancelbutton,
.selectbutton {
  padding: 0.5rem;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
}

.cancelbutton {
  background-color: hsl(var(--background-hs), 95%);
  border: 2px solid hsl(var(--background-hs), 80%);
  color: black;
}
.selectbutton {
  background-color: rgb(var(--accent-rgb));
  border: 2px solid rgb(var(--accent-rgb));
  color: white;
}

.modaltitle {
  border-bottom: 2px solid hsl(var(--background-hs), 90%);
  padding-bottom: 0.25rem;
}

.textinput {
  padding: 0.5rem;
  border-radius: 0.25rem;
  background-color: hsl(var(--background-hs), 95%);
  border: 2px solid hsl(var(--background-hs), 80%);
  color: black;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 0.5rem;
}

.tagcolor {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  min-width: 0;
  font-size: 0.8rem;
  align-self: stretch;
}

.tagcolor > div {
  display: flex;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
  align-items: flex-end;
}

.check {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.8rem;
}

.check > * {
  min-width: 0;
}

.tagcolor > div > input[type="color"] {
  appearance: none;
  border-color: transparent;
  color: currentColor;
  border-image: unset;
  background-color: hsl(var(--background-hs), 90%);
  cursor: pointer;
  border: none;
  border-radius: 0.25rem;
}

.check input {
  appearance: none;
  background-color: hsl(var(--background-hs), 98%);
  height: calc(0.9rem + 2px);
  width: calc(0.9rem + 2px);
  border-radius: 0.25rem;
  position: relative;
}

.check input::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 0.9rem;
  width: 0.9rem;
  border-radius: 0.25rem;
  border: 2px solid hsl(var(--background-hs), 90%);
}

.check > input:checked::before {
  background-color: rgb(var(--accent-rgb));
  border-color: rgb(var(--accent-rgb));
}

.check > input:checked::after {
  content: "";
  height: 0.5rem;
  width: 0.2rem;
  border-bottom: 2px solid white;
  border-right: 2px solid white;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) translateY(-2px) rotate(45deg);
}

.button {
  padding: 0.5rem;
  background-color: rgb(var(--accent-rgb));
  color: white;
  border-radius: 0.5rem;
  border-style: none;
  align-self: flex-start;
  font-weight: 500;
  cursor: pointer;
}

.avatar {
  height: 2rem;
  width: 2rem;
  object-position: center;
  object-fit: cover;
  border-radius: 50%;
  background-color: white;
}

.posttitle {
  font-weight: 600;
}

.technical {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 3rem;
  font-size: 0.8rem;
}

.userselectitem {
  display: flex;
  flex-direction: row;
  gap: 0.25rem;
  align-items: center;
}

.userselectitem > * {
  min-width: 0;
}

.userselectitem > img {
  flex-shrink: 0;
}

.postinput {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  grid-column-end: span 1;
}

.posteditform {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-rows: auto repeat(2, minmax(0, 1fr)) auto;
}

.title {
  grid-column: 1 / span 2;
}

.posttype {
  display: flex;
  gap: 0.5rem;
  flex-direction: row;
  align-items: center;
}

.textinput:invalid {
  border-color: hsl(0, 100%, 75%);
}
